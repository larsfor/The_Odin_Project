1. A site for pet-sitting (watching someone’s pet while they’re gone). 
People can babysit for multiple pets and pets can have multiple petsitters.

_PETSITTER_
-name:string

has_many: Appointments 
has_many: Pets, through: Appointments


_APPOINTMENT_
belongs_to Petsitter
belongs_to Pet


_PET_
-name:string

has_many Appointments
has_many Petsitters, through: Appointments


2. You like hosting people for dinner so you want to build a dinner party 
invitation site. A user can create parties, invite people to a party, and 
accept an invitation to someone else’s party.

_Party_
-name:string

has_many party_guestings, foreign_key "guested_party_id"
has_many guests, through: party_guestings, source: party_guest
belongs_to :host, class_name "User"

_User_
-name:string

has_many party_guestings, foreign_key: "party_guest_id"
has_many guested_partys, through: "party_guestings"
has_many hosted_partys, foreign_key: "host_id", class_name "Party"


_Party_guesting_
belongs_to "guested_party, class_name: "Party"
belongs_to "party_guest, class_name: "User"


3. Extra credit (tricky): You and your friends just love posting things and 
following each other. How would you set up the models so a user can follow 
another user?

 - (Self joins) -

_Post_
-title:string
-body:text

has_many post_followings, foreign_key: followed_post_id
has_many followers, through: post_followings, source: "post_follow"
belongs_to creator, class_name "User"

_User_
-name:string

has_many post_followings, foreign_key: "post_follow_id"
has_many followed_posts, through: post_followings
has_many created_posts, foreign_key "creator_id", class_name "Post" 

// (Self join)
has_many followers, foreign_key: "creator_id", class_name: "User"
belongs_to creator, class_name "User"


_Post_following_
belongs_to followed_post, class_name "Post"
belongs_to post_follow, class_name "User"



